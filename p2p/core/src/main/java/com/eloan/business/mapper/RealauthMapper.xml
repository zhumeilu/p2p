<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eloan.business.mapper.RealauthMapper">

	<resultMap id="BaseResultMap" type="com.eloan.business.domain.Realauth">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="realname" property="realname" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="TINYINT" />
		<result column="birthDate" property="birthDate" jdbcType="VARCHAR" />
		<result column="idNumber" property="idNumber" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="image1" property="image1" jdbcType="VARCHAR" />
		<result column="image2" property="image2" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
		<result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />
		
		<association property="applier" javaType="Logininfo" columnPrefix="a_">
			<id column="id" property="id"/>
			<result column="username" property="username"/>
		</association>
		<association property="auditor" javaType="Logininfo" columnPrefix="at_">
			<id column="id" property="id"/>
			<result column="username" property="username"/>
		</association>
	</resultMap>
	
	
	<sql id="base_column">
		ra.id, ra.realname, ra.sex, ra.birthDate, ra.idNumber, ra.address, ra.state, ra.image1,ra.image2,ra.remark,
			   ra.auditTime, ra.applyTime,a.id as a_id,a.username as a_username,a2.id as at_id,a2.username as at_username
	</sql>
	
	<sql id="base_where">
		<where>
			<if test="beginDate!=null">
				AND ra.applyTime &gt;= #{beginDate}
			</if>
			<if test="endDate!=null">
				AND ra.applyTime &lt;= #{endDate}
			</if>
			<if test="state>-1">
				AND ra.state = #{state}
			</if>
		</where>
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select <include refid="base_column" />
		from realauth ra left join logininfo a on ra.applier_id = a.id left join logininfo a2 on ra.auditor_id = a2.id
		where ra.id = #{id,jdbcType=BIGINT}
	</select>
	
	<select id="queryForCount" resultType="int">
		select count(id) from realauth ra 
		<include refid="base_where" />
	</select>
	
	<select id="query" resultMap="BaseResultMap">
		select <include refid="base_column" />
		from realauth ra left join logininfo a on ra.applier_id = a.id left join logininfo a2 on ra.auditor_id = a2.id
		<include refid="base_where" />
		<if test="pageSize>-1">
			LIMIT #{start},#{pageSize}
		</if>
	</select>
	
	<insert id="insert" parameterType="Realauth" useGeneratedKeys="true" keyProperty="id">
		insert into realauth (realname, sex, birthDate,idNumber, address, state,image1, image2, remark,
		auditTime, applyTime, auditor_id,applier_id)
		values (#{realname,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT},
		#{birthDate,jdbcType=VARCHAR},#{idNumber,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT},
		#{image1,jdbcType=VARCHAR}, #{image2,jdbcType=VARCHAR},	#{remark,jdbcType=VARCHAR},
		#{auditTime,jdbcType=TIMESTAMP}, #{applyTime,jdbcType=TIMESTAMP}, #{auditor.id,jdbcType=BIGINT},#{applier.id,jdbcType=BIGINT})
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.eloan.business.domain.Realauth">
		update realauth
		set realname = #{realname,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=TINYINT},
		birthDate = #{birthDate,jdbcType=VARCHAR},
		idNumber = #{idNumber,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		state = #{state,jdbcType=TINYINT},
		image1 = #{image1,jdbcType=VARCHAR},
		image2 = #{image2,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		auditTime = #{auditTime,jdbcType=TIMESTAMP},
		applyTime = #{applyTime,jdbcType=TIMESTAMP},
		auditor_id = #{auditor.id,jdbcType=BIGINT},
		applier_id = #{applier.id,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>