<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 开启注解方式 -->
	<context:annotation-config />

	<!-- 扫描包 -->
	<context:component-scan
		base-package="com.eloan.base.service;com.eloan.business.service" />
		
	<!-- 配置资源文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
				<value>classpath:db2.properties</value>
				<value>classpath:m5c.properties</value>
				<value>classpath:mail.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置dataSource -->
	<bean id="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<!-- 配置读dataSource -->
	<bean id="dataSourceRead" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver2}" />
		<property name="url" value="${db.url2}" />
		<property name="username" value="${db.username2}" />
		<property name="password" value="${db.password2}" />
	</bean>
	
	<!-- 配置路由datasource -->
	<bean id="dataSource" class="com.eloan.base.util.EloanRoutingDataSource">
		<property name="targetDataSources">
			<map>
				<entry key="dbmaster" value-ref="dataSourceMaster" />
				<entry key="dbread" value-ref="dataSourceRead" />
			</map>
		</property>
		<!-- 默认的路由 -->
		<property name="defaultTargetDataSource" ref="dataSourceMaster" />
	</bean>

	<!-- 配置sqlsessionfactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="typeAliasesPackage"
			value="com.eloan.base.domain;com.eloan.business.domain" />
		<property name="mapperLocations"
			value="classpath*:com/eloan/base/mapper/*Mapper.xml;classpath*:com/eloan/business/mapper/*Mapper.xml" />
	</bean>

	<!-- 配置自动扫描Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.eloan.base.mapper;com.eloan.business.mapper" />
	</bean>

	<!-- 配置事务的属性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务配置 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置事务切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.eloan..service.*Service.*(..))"
			id="crudPC" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="crudPC" />
	</aop:config>
	
</beans>